{"version":3,"file":"static/js/248.12bc1bd7.chunk.js","mappings":"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","sources":["pages/Itemlist.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// css import\r\nimport style from '../styles/Item.module.css';\r\n// component import\r\nimport Filteraside from '../components/Filteraside';\r\nimport ErrorItem from '../components/ErrorItem';\r\nimport Paging from '../components/Paging';\r\n// redux import\r\nimport { fetchItemsSuccess, filterItem, pagingItem } from '../redux/actions/itemActions';\r\nimport { setSelectedPrice, setSelectedRating, setSelectedTag } from '../redux/actions/filterActions';\r\n\r\nconst ITEMS_PER_PAGE = 12;\r\nconst NO_IMAGE_URL = '/images/common/noimg.png';\r\n\r\nconst Itemlist = ({ category, categoryEng }) => {\r\n  let dispatch = useDispatch()\r\n  const selectedPrice = useSelector(state => state.filter.selectedPrice);\r\n  const selectedRating = useSelector(state => state.filter.selectedRating);\r\n  const selectedTag = useSelector(state => state.filter.selectedTag);\r\n  const items = useSelector(state => state.item.items);\r\n  const filtereditems = useSelector(state => state.item.filtereditems);\r\n  const pageditems = useSelector(state => state.item.pageditems);\r\n  const [IsResult, setIsResult] = useState(false);\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  const [filterTag, setFilterTag] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const endIndex = startIndex + ITEMS_PER_PAGE;\r\n  \r\n  // ************************** 기본 아이템 fetch ***************************\r\n  const fetchItemListData = async () => {\r\n    try {\r\n      const response = await axios.get(`/subs/${categoryEng}`);\r\n      const data = response.data.items;\r\n\r\n      // 아이템 데이터를 받아온 후에 filterTag을 계산하고 상태를 업데이트\r\n      if(response.data.items.length !== 0){\r\n        const tagsAll = data.map(item => item.tags.map(tag => tag.tagName)).flat();\r\n        setFilterTag(tagsAll.reduce((ac, v) => ac.includes(v) ? ac : [...ac, v], []));\r\n        dispatch(fetchItemsSuccess(data));\r\n\r\n        setStartIndex(0);\r\n        setPage(1);\r\n      } else {\r\n        dispatch(fetchItemsSuccess([]));\r\n        dispatch(filterItem([]));\r\n        dispatch(pagingItem([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      alert(`서비스를 가져오던 중 오류가 발생했습니다. 잠시 후 다시 시도해주시기 바랍니다.`)\r\n    } finally {\r\n      setIsLoading(false);\r\n      \r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchItemListData();\r\n  }, [dispatch, categoryEng]);\r\n\r\n// 페이지 첫 진입 시 필터 초기화\r\nuseEffect(() => {\r\n  dispatch(setSelectedPrice(null));\r\n  dispatch(setSelectedRating(null));\r\n  dispatch(setSelectedTag([]));\r\n}, []);\r\n\r\n// 결과 유무\r\nuseEffect(() => {\r\n  setIsResult(items.length > 0 || filtereditems.length > 0);\r\n}, [items, filtereditems, categoryEng]);\r\n\r\n// 페이지 변경 핸들러\r\nconst handlePageChange = (pageNumber) => {\r\n  setPage(pageNumber);\r\n};\r\nuseEffect(() => {\r\n  const newStartIndex = (page - 1) * ITEMS_PER_PAGE;\r\n  setStartIndex(newStartIndex);\r\n}, [page]);\r\n\r\n\r\n  // ****************************** 필터 버튼 핸들러 *******************************\r\n  // 리셋 버튼 핸들러\r\n  const resetFilters = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  // 가격 체크박스 핸들러\r\n  const handleSelectedPrice = (e) => {\r\n    // 선택한 필터 reducer에 업데이트\r\n    let updateSelectedPrice = null;\r\n    if (selectedPrice === e.target.value) {\r\n      updateSelectedPrice = null;\r\n    } else {\r\n      updateSelectedPrice = e.target.value;\r\n    }\r\n    dispatch(setSelectedPrice(updateSelectedPrice));\r\n  };\r\n  // 별점 체크박스 핸들러\r\n  const handleSelectedRating = (e) => {\r\n    // 선택한 필터 reducer에 업데이트\r\n    let updateSelectedRating = null;\r\n    if (selectedRating === e.target.value) {\r\n      updateSelectedRating = null;\r\n    } else {\r\n      updateSelectedRating = e.target.value;\r\n    }\r\n    dispatch(setSelectedRating(updateSelectedRating));\r\n  };\r\n  // 태그 체크박스 핸들러\r\n  const handleSelectedTag = (e) => {\r\n    // 선택한 필터 reducer에 업데이트\r\n    let updateSelectedTag = [];\r\n    if (selectedTag.includes(e.target.value)) {\r\n      updateSelectedTag = selectedTag.filter((tag) => tag !== e.target.value);\r\n      if (updateSelectedTag.length === 0){ updateSelectedTag = [] }\r\n    } else {\r\n      updateSelectedTag = [...selectedTag, e.target.value];\r\n    }\r\n    dispatch(setSelectedTag(updateSelectedTag));\r\n  };\r\n\r\n  // 필터적용 핸들러\r\n  const handleFilteredItems = useMemo(() => {\r\n    let updateditems = items;\r\n    \r\n    if(selectedPrice !== null){\r\n      updateditems = updateditems.filter(item => {\r\n        if (selectedPrice === 'priceRow') {\r\n          return item.ranks.some(rank => rank.price < 5900);\r\n        } else if (selectedPrice === 'priceMedium') {\r\n          return item.ranks.some(rank => 5900 <= rank.price && rank.price <= 9900);\r\n        } else {\r\n          return item.ranks.some(rank => rank.price > 9900);\r\n        }\r\n      });\r\n    };\r\n    if(selectedRating !== null){\r\n      let selectedRatingAvg = parseInt(selectedRating.substr(-1));\r\n      updateditems = updateditems.filter(item => item.ratingAvg === selectedRatingAvg );\r\n    };\r\n    if(selectedTag.length !== 0){\r\n      updateditems = updateditems.filter(item => \r\n        selectedTag.every(selectedtag => \r\n          item.tags.some(tag => tag.tagName === selectedtag)\r\n        )\r\n      );\r\n    };\r\n    // 필터조작 후 1페이지로 이동\r\n    if (selectedPrice !== null || selectedRating !== null || selectedTag.length !== 0) {\r\n      setPage(1);\r\n    }\r\n\r\n    setIsResult(updateditems.length > 0);\r\n\r\n    if(updateditems.length < 13){\r\n      setStartIndex(0);\r\n      setPage(1);\r\n    }\r\n\r\n    // 페이지 아이템 계산\r\n    const pagedItems = updateditems.slice(startIndex, startIndex + ITEMS_PER_PAGE);\r\n\r\n    // Redux 상태 업데이트\r\n    dispatch(filterItem(updateditems));\r\n    dispatch(pagingItem(pagedItems));\r\n\r\n    return updateditems;\r\n  }, [items, selectedPrice, selectedRating, selectedTag, startIndex, page]);\r\n\r\n  useEffect(() => {\r\n    if (!IsLoading) {\r\n      if (selectedPrice || selectedRating || selectedTag.length > 0) {\r\n        setIsResult(filtereditems.length > 0);\r\n      }\r\n    }\r\n  }, [IsLoading, filtereditems, items, selectedPrice, selectedRating, selectedTag]);\r\n\r\n\r\n  return (\r\n    <section className={style.pagewrap}>\r\n      <div className='webwidth'>\r\n        <div className='page_tit page_tit-side'>\r\n          <h2>{category}</h2>\r\n        </div>\r\n        <div className={style.categorysection}>\r\n          <Filteraside resetFilters={resetFilters} handleSelectedPrice={handleSelectedPrice} handleSelectedRating={handleSelectedRating} handleSelectedTag={handleSelectedTag} filterTag={filterTag} handleFilteredItems={handleFilteredItems} />\r\n          <section className={style.right}>\r\n            <div className={style.section}>\r\n              <div className={style.itemlist}>\r\n                {IsResult ? pageditems.map((item, index) => (\r\n                  <Link to={`/subs/detail/${item.id}`} key={index} className={style.item}>\r\n                    <div className={style.img}>\r\n                      <img src={item.image || NO_IMAGE_URL} alt={item.name} />\r\n                    </div>\r\n                    <div className={style.txt}>\r\n                      <h3>{item.name}</h3>\r\n                      <div className={style.tag}>\r\n                        {\r\n                          item.tags.map((tag, tagindex) => (\r\n                            <p key={tagindex}>{tag.tagName}</p>\r\n                          ))\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                )) : <ErrorItem message=\"이런! 해당하는 구독서비스가 없습니다.\" />}\r\n              </div>\r\n            </div>\r\n\r\n            <Paging handlePageChange={handlePageChange} page={page} count={selectedPrice || selectedRating || selectedTag.length > 0 ? filtereditems.length : items.length} ITEMS_PER_PAGE={ITEMS_PER_PAGE} />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Itemlist;\r\n"],"names":["_ref","category","categoryEng","dispatch","useDispatch","selectedPrice","useSelector","state","filter","selectedRating","selectedTag","items","item","filtereditems","pageditems","_useState","useState","_useState2","_slicedToArray","IsResult","setIsResult","_useState3","_useState4","IsLoading","setIsLoading","_useState5","_useState6","filterTag","setFilterTag","_useState7","_useState8","page","setPage","_useState9","_useState10","startIndex","setStartIndex","fetchItemListData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","tagsAll","wrap","_context","prev","next","axios","get","concat","sent","length","map","tags","tag","tagName","flat","reduce","ac","v","includes","_toConsumableArray","fetchItemsSuccess","filterItem","pagingItem","t0","console","error","alert","finish","stop","apply","arguments","useEffect","setSelectedPrice","setSelectedRating","setSelectedTag","handleFilteredItems","useMemo","updateditems","ranks","some","rank","price","selectedRatingAvg","parseInt","substr","ratingAvg","every","selectedtag","pagedItems","slice","_jsx","className","style","pagewrap","children","_jsxs","categorysection","Filteraside","resetFilters","window","location","reload","handleSelectedPrice","e","updateSelectedPrice","target","value","handleSelectedRating","updateSelectedRating","handleSelectedTag","updateSelectedTag","right","section","itemlist","index","Link","to","id","img","src","image","alt","name","txt","tagindex","ErrorItem","message","Paging","handlePageChange","pageNumber","count","ITEMS_PER_PAGE"],"sourceRoot":""}